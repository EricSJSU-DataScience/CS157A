CS157A project proposal
Group member:
Rahul Champaneria
Ellie Chong
Jessica Fung
Ruxin Xie
Eric Zhao
Goals and Description of the Application
Goals:
The primary goal of the Auction and Marketplace System is to provide a platform for users to
buy, sell, or auction products. The system will cater to both sellers and buyers by facilitating the
listing of items, bidding on auctions, and direct purchasing of products. Additionally, the system
will include essential features such as user account management, payment processing, and
notifications for transactions.
The system aims to:
1. Enable sellers to list products for sale or auction, manage their listings, and track bids.
2. Allow buyers to browse products, participate in auctions, or directly purchase items.
3. Provide a user-friendly platform that supports product reviews, category management,
shipping logistics, and notifications for transactions and updates.
4. Ensure data consistency, secure transactions, and a scalable architecture for future
growth.
Description of the application:
The proposed application will function as an online marketplace where users can either list
items for sale or participate in auctions. Sellers can create detailed product listings, including
images and descriptions, while buyers can browse items, bid on auctions, or make direct
purchases. The system will also provide various features to support payments, shipping, and
notifications. The application will manage different types of products across multiple categories
and will allow users to write reviews and provide feedback on their purchased products.
Key functionalities include:
● User management: Secure user registration, login, and profile management.
● Product management: Sellers can list products for sale or auction, edit listings, and
track bids.
● Bidding system: Buyers can bid on auctioned items and view bidding history.
● Order and payment management: Buyers can place orders, input payment information,
and view order details.
● Shipping logistics: The system will manage shipping information and delivery status for
each order.
● Notification system: Users will receive notifications regarding transactions, bids, and
shipping updates.
Application/ Functional requirements
Functional Requirements:
User management:
Register and authenticate users login
Update user information/profile after user login
Change user password
Product sell or auction management:
Seller can list products in different category for sell or auction
Seller can set and edit products name, description, price/starting price, quantity, and
listing duration
Seller can view bids on auction product, and also top bid price and bid history
Bidding system:
Buyers can browse products in different categories and bid on products.
Buyers can check for products listing duration and bid history.
Place order and payment system:
Buyers can place order for products
Buyers can manage order details (order date, product name, quantity, individual price,
and total price)
Buyers can input different payment methods(visa or others)
Product review system:
Buyers can write reviews and give ratings to purchased products
Buyers can only write reviews to each purchased products once per order
Reviews and ratings will display on product pages
Category management:
Define and manage categories for products
Products associated with different categories
Shipping logistic management:
Create shipping information for orders
Update shipping status and estimate delivery date/time
Notification management:
System sent notification to users about bids, sales, and shipping information
User can view and manage their notification preferences
Nonfunctional Requirements:
Performance
The system must return search results and product listings within 2 seconds under
normal load conditions.
Auction bidding updates should be displayed to users within 1 second of a new bid being
placed to ensure real-time accuracy during live auctions.
Maintainability
The system should be built using modular components, allowing for easy updates or bug
fixes. The average time to resolve issues should not exceed 24 hours.
Developers should be able to add new features or modify existing ones without
significant rewrites, supported by comprehensive documentation.
Availability
The system should be available 24/7, with scheduled maintenance taking place during
non-peak hours and notifications sent to users 48 hours in advance.
Security
Regular security audits must be conducted, and any discovered vulnerabilities should be
addressed within 48 hours.
Usability
The user interface should be intuitive, allowing users to easily navigate between product
listings, auction bidding, and account management.
Feedback for user actions (e.g., confirmation of placed bids or successful purchases)
must be displayed clearly within 1 second.
Architecture
We developed a web-based Auction and Marketplace System using a client-server model
connected to a MySQL database, applying the skills and technologies learned in our Database
Management Systems course. Below, I’ll describe the tools and technologies used for
development in more detail:
Frontend: HTML, CSS, and JavaScript
The user interface is built with HTML, CSS, and JavaScript to ensure a smooth and interactive
user experience. When users visit the platform, the frontend sends requests to the backend to
fetch initial product or auction data, which is then dynamically displayed using JavaScript. The
front end features a search bar and filter options, allowing users to refine their search for
products or auction items. As users interact with these features, the front end captures their
inputs and communicates with the backend to retrieve and display filtered or search results in
real-time, offering a seamless and intuitive browsing experience.
Backend: Node.js and Express Framework
The backend is implemented using Node.js and the Express framework, creating a powerful and
flexible server-side environment. The server handles all HTTP requests from the frontend, such
as retrieving products, managing auctions, or processing transactions. When a request is
received, the backend interacts with the MySQL database, executing SQL queries to fetch the
required data, whether it’s for listing products, tracking bids, or managing user accounts. The
backend then formats this data and sends it to the frontend as a JSON response, ensuring fast
and efficient data handling.
Database: MySQL
The MySQL database stores all product and auction data, structured with tables that include
attributes like ProductID, SellerID, BidAmount, and more. Each time a user searches for
products, applies filters or participates in auctions, the backend constructs SQL queries to
match the specified criteria. The database efficiently executes these queries, returning the
relevant data to the backend, which processes and formats it for display on the front end. This
setup ensures that product listings, auction updates, and user information are always accurate
and up to date.
Development Resources
● Product Images: Over 200 product images are used to visually enhance the user
experience.
● CSV Files: Product and auction data are initially imported via CSV files to populate the
database.
