{"ast":null,"code":"var _jsxFileName = \"D:\\\\environment\\\\project157_marketplace\\\\src\\\\components\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notifications({\n  loggedInUserId\n}) {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    if (loggedInUserId) {\n      // console.log('Logged in User ID:', loggedInUserId); // Verify that user ID is available\n      fetch(`http://localhost:5000/notifications/${loggedInUserId}`).then(res => res.json()).then(data => {\n        console.log('Notifications fetched:', data);\n        setNotifications(data);\n      }).catch(err => {\n        console.error('Error fetching notifications:', err);\n      });\n    } else {\n      console.log('No loggedInUserId found');\n    }\n  }, [loggedInUserId]);\n  const handleMarkAsRead = notificationId => {\n    console.log(`Marking notification ${notificationId} as read`);\n    // Here you can add logic to update the backend to mark the notification as read\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.notificationsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.notificationsTitle,\n      children: \"Your Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), notifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: styles.notificationsList,\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.notificationItem,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.notificationMessage,\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.notificationDate,\n          children: new Date(notification.notification_Date).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.readButton,\n          onClick: () => handleMarkAsRead(notification.notification_id),\n          children: \"Mark as Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)]\n      }, notification.notification_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No notifications at this time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nconst styles = {\n  notificationsContainer: {\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif'\n  },\n  notificationsTitle: {\n    textAlign: 'left',\n    marginBottom: '20px',\n    fontSize: '24px',\n    fontWeight: 'bold'\n  },\n  notificationsList: {\n    listStyle: 'none',\n    padding: '0'\n  },\n  notificationItem: {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '15px',\n    marginBottom: '15px',\n    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)'\n  },\n  notificationMessage: {\n    fontSize: '16px',\n    margin: '0'\n  },\n  notificationDate: {\n    fontSize: '14px',\n    color: '#666',\n    marginTop: '10px'\n  }\n};\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Notifications","loggedInUserId","_s","notifications","setNotifications","fetch","then","res","json","data","console","log","catch","err","error","handleMarkAsRead","notificationId","style","styles","notificationsContainer","children","notificationsTitle","fileName","_jsxFileName","lineNumber","columnNumber","length","notificationsList","map","notification","notificationItem","notificationMessage","message","notificationDate","Date","notification_Date","toLocaleString","readButton","onClick","notification_id","_c","padding","fontFamily","textAlign","marginBottom","fontSize","fontWeight","listStyle","border","borderRadius","boxShadow","margin","color","marginTop","$RefreshReg$"],"sources":["D:/environment/project157_marketplace/src/components/Notifications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Notifications({ loggedInUserId }) {\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (loggedInUserId) {\r\n            // console.log('Logged in User ID:', loggedInUserId); // Verify that user ID is available\r\n            fetch(`http://localhost:5000/notifications/${loggedInUserId}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log('Notifications fetched:', data);\r\n                    setNotifications(data);\r\n                })\r\n                .catch(err => {\r\n                    console.error('Error fetching notifications:', err);\r\n                });\r\n        } else {\r\n            console.log('No loggedInUserId found');\r\n        }\r\n    }, [loggedInUserId]);\r\n\t\r\n\tconst handleMarkAsRead = (notificationId) => {\r\n        console.log(`Marking notification ${notificationId} as read`);\r\n        // Here you can add logic to update the backend to mark the notification as read\r\n    };\r\n\r\n    return (\r\n        <div style={styles.notificationsContainer}>\r\n            <h2 style={styles.notificationsTitle}>Your Notifications</h2>\r\n            {notifications.length > 0 ? (\r\n                <ul style={styles.notificationsList}>\r\n                    {notifications.map(notification => (\r\n                        <li key={notification.notification_id} style={styles.notificationItem}>\r\n                            <p style={styles.notificationMessage}>{notification.message}</p>\r\n                            <p style={styles.notificationDate}>{new Date(notification.notification_Date).toLocaleString()}</p>\r\n                            <button \r\n                                style={styles.readButton} \r\n                                onClick={() => handleMarkAsRead(notification.notification_id)}\r\n                            >\r\n                                Mark as Read\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No notifications at this time.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    notificationsContainer: {\r\n        padding: '20px',\r\n        fontFamily: 'Arial, sans-serif',\r\n    },\r\n    notificationsTitle: {\r\n        textAlign: 'left',\r\n        marginBottom: '20px',\r\n        fontSize: '24px',\r\n        fontWeight: 'bold',\r\n    },\r\n    notificationsList: {\r\n        listStyle: 'none',\r\n        padding: '0',\r\n    },\r\n    notificationItem: {\r\n        border: '1px solid #ccc',\r\n        borderRadius: '5px',\r\n        padding: '15px',\r\n        marginBottom: '15px',\r\n        boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n    },\r\n    notificationMessage: {\r\n        fontSize: '16px',\r\n        margin: '0',\r\n    },\r\n    notificationDate: {\r\n        fontSize: '14px',\r\n        color: '#666',\r\n        marginTop: '10px',\r\n    },\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}