{"ast":null,"code":"var _jsxFileName = \"D:\\\\environment\\\\project157_marketplace\\\\src\\\\components\\\\Review.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Review({\n  loggedInUserId\n}) {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [rating, setRating] = useState(5);\n  const [reviewText, setReviewText] = useState('');\n  console.log('Rendering Review component. User ID:', loggedInUserId); // Log to check if component is rendering\n\n  useEffect(() => {\n    if (loggedInUserId) {\n      console.log('loggedInUserId is available:', loggedInUserId);\n      fetch(`http://localhost:5000/show-review/${loggedInUserId}`).then(res => res.json()).then(data => {\n        console.log('Reviews fetched:', data); // Log the received data\n        if (Array.isArray(data)) {\n          setReviews(data);\n        } else {\n          console.error('Unexpected response format:', data);\n          setReviews([]);\n        }\n      }).catch(err => {\n        console.error('Error fetching reviews:', err);\n        setReviews([]);\n      });\n    } else {\n      console.error('loggedInUserId is not defined yet');\n    }\n  }, [loggedInUserId]);\n  const submitReview = async reviewId => {\n    try {\n      const response = await fetch(`http://localhost:5000/reviews/${reviewId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          rating,\n          reviewText\n        })\n      });\n      if (response.ok) {\n        alert('Thank you for your review!');\n        setReviews(reviews.map(review => review.Review_ID === reviewId ? {\n          ...review,\n          Rating: rating,\n          Review_Text: reviewText,\n          Review_Status: 'Rated'\n        } : review));\n        setRating(5);\n        setReviewText('');\n      } else {\n        console.error('Failed to submit review');\n      }\n    } catch (error) {\n      console.error('Error submitting review:', error);\n    }\n  };\n  if (!loggedInUserId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews to be completed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: review.Product_Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order ID: \", review.Order_ID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this), review.Review_Status === 'Pending' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rating (1-5):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: rating,\n          onChange: e => setRating(e.target.value),\n          min: \"1\",\n          max: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: reviewText,\n          onChange: e => setReviewText(e.target.value),\n          placeholder: \"Write your review...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitReview(review.Review_ID),\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Rating: \", review.Rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Review: \", review.Review_Text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true)]\n    }, review.Review_ID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Review, \"clids7+9X+Quj8F55hKNH/B/wxo=\");\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Review","loggedInUserId","_s","reviews","setReviews","rating","setRating","reviewText","setReviewText","console","log","fetch","then","res","json","data","Array","isArray","error","catch","err","submitReview","reviewId","response","method","headers","body","JSON","stringify","ok","alert","map","review","Review_ID","Rating","Review_Text","Review_Status","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Product_Title","Order_ID","type","value","onChange","e","target","min","max","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/environment/project157_marketplace/src/components/Review.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Review({ loggedInUserId }) {\r\n    const [reviews, setReviews] = useState([]);\r\n    const [rating, setRating] = useState(5);\r\n    const [reviewText, setReviewText] = useState('');\r\n\r\n    console.log('Rendering Review component. User ID:', loggedInUserId); // Log to check if component is rendering\r\n\r\n    useEffect(() => {\r\n        if (loggedInUserId) {\r\n            console.log('loggedInUserId is available:', loggedInUserId);\r\n            fetch(`http://localhost:5000/show-review/${loggedInUserId}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log('Reviews fetched:', data); // Log the received data\r\n                    if (Array.isArray(data)) {\r\n                        setReviews(data);\r\n                    } else {\r\n                        console.error('Unexpected response format:', data);\r\n                        setReviews([]);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.error('Error fetching reviews:', err);\r\n                    setReviews([]);\r\n                });\r\n        } else {\r\n            console.error('loggedInUserId is not defined yet');\r\n        }\r\n    }, [loggedInUserId]);\r\n\r\n    const submitReview = async (reviewId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/reviews/${reviewId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    rating,\r\n                    reviewText,\r\n                }),\r\n            });\r\n            if (response.ok) {\r\n                alert('Thank you for your review!');\r\n                setReviews(reviews.map(review => \r\n                    review.Review_ID === reviewId \r\n                        ? { ...review, Rating: rating, Review_Text: reviewText, Review_Status: 'Rated' }\r\n                        : review\r\n                ));\r\n                setRating(5);\r\n                setReviewText('');\r\n            } else {\r\n                console.error('Failed to submit review');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting review:', error);\r\n        }\r\n    };\r\n\r\n    if (!loggedInUserId) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Leave a Review</h2>\r\n            {reviews.length === 0 ? (\r\n                <p>No reviews to be completed.</p>\r\n            ) : (\r\n                reviews.map(review => (\r\n                    <div key={review.Review_ID}>\r\n                        <h3>{review.Product_Title}</h3>\r\n                        <p>Order ID: {review.Order_ID}</p>\r\n                        {review.Review_Status === 'Pending' ? (\r\n                            <>\r\n                                <label>Rating (1-5):</label>\r\n                                <input \r\n                                    type=\"number\" \r\n                                    value={rating} \r\n                                    onChange={(e) => setRating(e.target.value)} \r\n                                    min=\"1\" \r\n                                    max=\"5\" \r\n                                />\r\n                                <textarea \r\n                                    value={reviewText} \r\n                                    onChange={(e) => setReviewText(e.target.value)} \r\n                                    placeholder=\"Write your review...\" \r\n                                />\r\n                                <button onClick={() => submitReview(review.Review_ID)}>Submit Review</button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <p>Your Rating: {review.Rating}</p>\r\n                                <p>Your Review: {review.Review_Text}</p>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Review;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,MAAMA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhDe,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAET,cAAc,CAAC,CAAC,CAAC;;EAErEN,SAAS,CAAC,MAAM;IACZ,IAAIM,cAAc,EAAE;MAChBQ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAET,cAAc,CAAC;MAC3DU,KAAK,CAAC,qCAAqCV,cAAc,EAAE,CAAC,CACvDW,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACVN,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEK,IAAI,CAAC,CAAC,CAAC;QACvC,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;UACrBX,UAAU,CAACW,IAAI,CAAC;QACpB,CAAC,MAAM;UACHN,OAAO,CAACS,KAAK,CAAC,6BAA6B,EAAEH,IAAI,CAAC;UAClDX,UAAU,CAAC,EAAE,CAAC;QAClB;MACJ,CAAC,CAAC,CACDe,KAAK,CAACC,GAAG,IAAI;QACVX,OAAO,CAACS,KAAK,CAAC,yBAAyB,EAAEE,GAAG,CAAC;QAC7ChB,UAAU,CAAC,EAAE,CAAC;MAClB,CAAC,CAAC;IACV,CAAC,MAAM;MACHK,OAAO,CAACS,KAAK,CAAC,mCAAmC,CAAC;IACtD;EACJ,CAAC,EAAE,CAACjB,cAAc,CAAC,CAAC;EAEpB,MAAMoB,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACrC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAAC,iCAAiCW,QAAQ,EAAE,EAAE;QACtEE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBvB,MAAM;UACNE;QACJ,CAAC;MACL,CAAC,CAAC;MACF,IAAIgB,QAAQ,CAACM,EAAE,EAAE;QACbC,KAAK,CAAC,4BAA4B,CAAC;QACnC1B,UAAU,CAACD,OAAO,CAAC4B,GAAG,CAACC,MAAM,IACzBA,MAAM,CAACC,SAAS,KAAKX,QAAQ,GACvB;UAAE,GAAGU,MAAM;UAAEE,MAAM,EAAE7B,MAAM;UAAE8B,WAAW,EAAE5B,UAAU;UAAE6B,aAAa,EAAE;QAAQ,CAAC,GAC9EJ,MACV,CAAC,CAAC;QACF1B,SAAS,CAAC,CAAC,CAAC;QACZE,aAAa,CAAC,EAAE,CAAC;MACrB,CAAC,MAAM;QACHC,OAAO,CAACS,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZT,OAAO,CAACS,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,IAAI,CAACjB,cAAc,EAAE;IACjB,oBAAOJ,OAAA;MAAAwC,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACI5C,OAAA;IAAAwC,QAAA,gBACIxC,OAAA;MAAAwC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBtC,OAAO,CAACuC,MAAM,KAAK,CAAC,gBACjB7C,OAAA;MAAAwC,QAAA,EAAG;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAElCtC,OAAO,CAAC4B,GAAG,CAACC,MAAM,iBACdnC,OAAA;MAAAwC,QAAA,gBACIxC,OAAA;QAAAwC,QAAA,EAAKL,MAAM,CAACW;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/B5C,OAAA;QAAAwC,QAAA,GAAG,YAAU,EAACL,MAAM,CAACY,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjCT,MAAM,CAACI,aAAa,KAAK,SAAS,gBAC/BvC,OAAA,CAAAE,SAAA;QAAAsC,QAAA,gBACIxC,OAAA;UAAAwC,QAAA,EAAO;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5B5C,OAAA;UACIgD,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEzC,MAAO;UACd0C,QAAQ,EAAGC,CAAC,IAAK1C,SAAS,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC3CI,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC;QAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACF5C,OAAA;UACIiD,KAAK,EAAEvC,UAAW;UAClBwC,QAAQ,EAAGC,CAAC,IAAKxC,aAAa,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC/CM,WAAW,EAAC;QAAsB;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eACF5C,OAAA;UAAQwD,OAAO,EAAEA,CAAA,KAAMhC,YAAY,CAACW,MAAM,CAACC,SAAS,CAAE;UAAAI,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eAC/E,CAAC,gBAEH5C,OAAA,CAAAE,SAAA;QAAAsC,QAAA,gBACIxC,OAAA;UAAAwC,QAAA,GAAG,eAAa,EAACL,MAAM,CAACE,MAAM;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnC5C,OAAA;UAAAwC,QAAA,GAAG,eAAa,EAACL,MAAM,CAACG,WAAW;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,eAC1C,CACL;IAAA,GAzBKT,MAAM,CAACC,SAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0BrB,CACR,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACvC,EAAA,CArGQF,MAAM;AAAAsD,EAAA,GAANtD,MAAM;AAuGf,eAAeA,MAAM;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}