{"ast":null,"code":"var _jsxFileName = \"D:\\\\environment\\\\project157_marketplace\\\\src\\\\components\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notifications({\n  loggedInUserId\n}) {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    if (loggedInUserId) {\n      // console.log('Logged in User ID:', loggedInUserId); // Verify that user ID is available\n      fetch(`http://localhost:5000/notifications/${loggedInUserId}`).then(res => res.json()).then(data => {\n        console.log('Notifications fetched:', data);\n        setNotifications(data);\n      }).catch(err => {\n        console.error('Error fetching notifications:', err);\n      });\n    } else {\n      console.log('No loggedInUserId found');\n    }\n  }, [loggedInUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), notifications.length > 0 ? notifications.map(notification => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [notification.message, \" - \", new Date(notification.notification_Date).toLocaleString()]\n    }, notification.notification_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No notifications at this time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nconst styles = {\n  notificationsContainer: {\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif'\n  },\n  notificationsTitle: {\n    textAlign: 'left',\n    marginBottom: '20px',\n    fontSize: '24px',\n    fontWeight: 'bold'\n  },\n  notificationsList: {\n    listStyle: 'none',\n    padding: '0'\n  },\n  notificationItem: {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '15px',\n    marginBottom: '15px',\n    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)'\n  },\n  notificationMessage: {\n    fontSize: '16px',\n    margin: '0'\n  },\n  notificationDate: {\n    fontSize: '14px',\n    color: '#666',\n    marginTop: '10px'\n  }\n};\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Notifications","loggedInUserId","_s","notifications","setNotifications","fetch","then","res","json","data","console","log","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","message","Date","notification_Date","toLocaleString","notification_id","_c","styles","notificationsContainer","padding","fontFamily","notificationsTitle","textAlign","marginBottom","fontSize","fontWeight","notificationsList","listStyle","notificationItem","border","borderRadius","boxShadow","notificationMessage","margin","notificationDate","color","marginTop","$RefreshReg$"],"sources":["D:/environment/project157_marketplace/src/components/Notifications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Notifications({ loggedInUserId }) {\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (loggedInUserId) {\r\n            // console.log('Logged in User ID:', loggedInUserId); // Verify that user ID is available\r\n            fetch(`http://localhost:5000/notifications/${loggedInUserId}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log('Notifications fetched:', data);\r\n                    setNotifications(data);\r\n                })\r\n                .catch(err => {\r\n                    console.error('Error fetching notifications:', err);\r\n                });\r\n        } else {\r\n            console.log('No loggedInUserId found');\r\n        }\r\n    }, [loggedInUserId]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Notifications</h2>\r\n            {notifications.length > 0 ? (\r\n                notifications.map(notification => (\r\n                    <p key={notification.notification_id}>\r\n                        {notification.message} - {new Date(notification.notification_Date).toLocaleString()}\r\n                    </p>\r\n                ))\r\n            ) : (\r\n                <p>No notifications at this time.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    notificationsContainer: {\r\n        padding: '20px',\r\n        fontFamily: 'Arial, sans-serif',\r\n    },\r\n    notificationsTitle: {\r\n        textAlign: 'left',\r\n        marginBottom: '20px',\r\n        fontSize: '24px',\r\n        fontWeight: 'bold',\r\n    },\r\n    notificationsList: {\r\n        listStyle: 'none',\r\n        padding: '0',\r\n    },\r\n    notificationItem: {\r\n        border: '1px solid #ccc',\r\n        borderRadius: '5px',\r\n        padding: '15px',\r\n        marginBottom: '15px',\r\n        boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\r\n    },\r\n    notificationMessage: {\r\n        fontSize: '16px',\r\n        margin: '0',\r\n    },\r\n    notificationDate: {\r\n        fontSize: '14px',\r\n        color: '#666',\r\n        marginTop: '10px',\r\n    },\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,IAAII,cAAc,EAAE;MAChB;MACAI,KAAK,CAAC,uCAAuCJ,cAAc,EAAE,CAAC,CACzDK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACVC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,IAAI,CAAC;QAC3CL,gBAAgB,CAACK,IAAI,CAAC;MAC1B,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAI;QACVH,OAAO,CAACI,KAAK,CAAC,+BAA+B,EAAED,GAAG,CAAC;MACvD,CAAC,CAAC;IACV,CAAC,MAAM;MACHH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IAC1C;EACJ,CAAC,EAAE,CAACV,cAAc,CAAC,CAAC;EAEpB,oBACIF,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BhB,aAAa,CAACiB,MAAM,GAAG,CAAC,GACrBjB,aAAa,CAACkB,GAAG,CAACC,YAAY,iBAC1BvB,OAAA;MAAAgB,QAAA,GACKO,YAAY,CAACC,OAAO,EAAC,KAAG,EAAC,IAAIC,IAAI,CAACF,YAAY,CAACG,iBAAiB,CAAC,CAACC,cAAc,CAAC,CAAC;IAAA,GAD/EJ,YAAY,CAACK,eAAe;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjC,CACN,CAAC,gBAEFpB,OAAA;MAAAgB,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACjB,EAAA,CAlCQF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAoCtB,MAAM6B,MAAM,GAAG;EACXC,sBAAsB,EAAE;IACpBC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE;EAChB,CAAC;EACDC,kBAAkB,EAAE;IAChBC,SAAS,EAAE,MAAM;IACjBC,YAAY,EAAE,MAAM;IACpBC,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE;EAChB,CAAC;EACDC,iBAAiB,EAAE;IACfC,SAAS,EAAE,MAAM;IACjBR,OAAO,EAAE;EACb,CAAC;EACDS,gBAAgB,EAAE;IACdC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBX,OAAO,EAAE,MAAM;IACfI,YAAY,EAAE,MAAM;IACpBQ,SAAS,EAAE;EACf,CAAC;EACDC,mBAAmB,EAAE;IACjBR,QAAQ,EAAE,MAAM;IAChBS,MAAM,EAAE;EACZ,CAAC;EACDC,gBAAgB,EAAE;IACdV,QAAQ,EAAE,MAAM;IAChBW,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACf;AACJ,CAAC;AAED,eAAehD,aAAa;AAAC,IAAA4B,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}